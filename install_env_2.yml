- hosts: group_sys
  become: yes
  become_method: sudo
  vars:
    user: asgef
    asdf_version: "v0.14.0"

  tasks:
    # Для последующей установки Python и Postgress потребуются пакеты

    - name: Install package for Python and psql
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - ssh
        - build-essential
        - libssl-dev
        - zlib1g-dev
        - libbz2-dev
        - libreadline-dev
        - libsqlite3-dev
        - libffi-dev
        - libncursesw5-dev
        - libgdbm-dev
        - libnss3-dev
        - liblzma-dev
        - libyaml-dev
        - tk-dev
        - uuid-dev
        - python3-psycopg2
        - pipx
        - postgresql
        - make
        - unzip
        - fontconfig
        - mosh
        - zip
        - acl
    
    # Установка asdf и плагинов

    - name: Check if .asdf directory exists
      stat:
        path: "/home/{{ user }}/.asdf"
      register: asdf_dir

    - name: Clone ASDF repository
      git:
        repo: 'https://github.com/asdf-vm/asdf.git'
        dest: "/home/{{ user }}/.asdf"
        version: "{{ asdf_version }}"
        update: no
      become_user: "{{ user }}"
      when: not asdf_dir.stat.exists

    - name: Add ASDF_DIR to .bashrc
      lineinfile:
        path: "/home/{{ user }}/.bashrc"
        line: '. $HOME/.asdf/asdf.sh'
        create: yes
      become_user: "{{ user }}"


    - block:
    # Python
      - name: Add Python plugin to asdf
        shell: /home/{{ user }}/.asdf/bin/asdf plugin-add python
        become_user: "{{ user }}"
        args:
          executable: /bin/sh


      - name: Install latest Python version
        shell: /home/{{ user }}/.asdf/bin/asdf install python latest
        become_user: "{{ user }}"
        args:
          executable: /bin/sh


      - name: Set latest Python version as global
        shell: /home/{{ user }}/.asdf/bin/asdf global python latest
        become_user: "{{ user }}"
        args:
          executable: /bin/sh


      - name: Set alias for Python
        ansible.builtin.command:
          cmd: echo "alias py='python'" >> /home/{{ user }}/.bashrc
        become_user: "{{ user }}"
        become: yes
      
      - name: Set alias for Python
        lineinfile:
          path: "/home/{{ user }}/.bashrc"
          line: "alias py='python'"
          create: yes
        become_user: "{{ user }}"


    # Poetry
      - name: Add Poetry plugin to asdf
        shell: /home/{{ user }}/.asdf/bin/asdf plugin-add poetry https://github.com/asdf-community/asdf-poetry.git
        become_user: "{{ user }}"
        args:
          executable: /bin/sh

        
      - name: Install latest Poetry version
        shell: /home/{{ user }}/.asdf/bin/asdf install poetry latest
        become_user: "{{ user }}"

      - name: Set latest Poetry version as global
        shell: /home/{{ user }}/.asdf/bin/asdf global poetry latest
        args:
          executable: /bin/bash
        become_user: "{{ user }}"

    - name: install postgresql
      apt:
        name: postgresql
        state: present
    
    - name: Ensure PostgreSQL service is running
      service:
        name: postgresql
        state: started
        enabled: yes
    
    - name: Get PostgreSQL version
      command: psql --version
      register: psql_version_output
    
    - name: Set PostgreSQL version fact
      set_fact:
        postgresql_version: "{{ psql_version_output.stdout.split(' ')[2].split('.')[0] }}"

    - name: Update pg_hba.conf to allow password authentication
      lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        regexp: '^local'
        line: 'local   all             all                                     md5'
        state: present
    
    - name: Update pg_hba.conf to allow password authentication for users
      lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        regexp: '^host'
        line: 'host    gwentdb     {{ user }}     0.0.0.0/0     md5'
        state: present
        # TODO: следует отработать замену строки а не простое добавление. Определиться с порядком добавления ДБ

    - name: Update postgresql.conf
      lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
        regexp: '^listen_addresses'
        line: "listen_addresses = '*'"
        state: present
    
    - name: Restart PostgreSQL service
      service:
        name: postgresql
        state: restarted
  
