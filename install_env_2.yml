- hosts: group_sys
  become: yes
  become_method: sudo
  vars:
    user: asgef
    
    ansible_python_interpreter: /usr/local/bin/python3.12

  tasks:
    - name: Install pip for Python 3.12 if not installed
      command: /usr/local/bin/python3.12 -m ensurepip
      register: ensure_pip
      ignore_errors: yes

    - name: Install packaging for Python 3.12
      ansible.builtin.command:
        cmd: /usr/local/bin/python3.12 -m pip install packaging
      when: ensure_pip.rc == 0

    

    - name: Install Poetry
      pip:
        name: poetry
      become_user: "{{ user }}"

    - name: Install dotenv
      pip:
        name: python-dotenv
        become_user: "{{ user }}"


    # PostgreSQL
    
    - name: Ensure PostgreSQL service is running
      service:
        name: postgresql
        state: started
        enabled: yes
    
    - name: Get PostgreSQL version
      command: psql --version
      register: psql_version_output
    
    - name: Set PostgreSQL version fact
      set_fact:
        postgresql_version: "{{ psql_version_output.stdout.split(' ')[2].split('.')[0] }}"

    - name: Update pg_hba.conf to allow password authentication
      lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        regexp: '^local'
        line: 'local   all             all                                     md5'
        state: present
    
    - name: Update pg_hba.conf to allow password authentication for users
      lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        regexp: '^host'
        line: 'host    gwentdb     {{ user }}     0.0.0.0/0     md5'
        state: present
        # TODO: следует отработать замену строки а не простое добавление. Определиться с порядком добавления ДБ

    - name: Update postgresql.conf
      lineinfile:
        path: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
        regexp: '^listen_addresses'
        line: "listen_addresses = '*'"
        state: present
    
    - name: Restart PostgreSQL service
      service:
        name: postgresql
        state: restarted
        
